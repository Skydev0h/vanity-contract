(int) slice_equal(slice s1, slice s2) asm "SDEQ";

() recv_internal(cell in_msg_cell, slice in_msg) {
    var ds = get_data().begin_parse();
    var author = ds~load_msg_addr();

    ;; Parse message
    var cs = in_msg_cell.begin_parse();
    var flags = cs~load_uint(4);  ;; int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool
    slice sender = cs~load_msg_addr();

    throw_unless(slice_equal(sender, author), 8);

    var code = cs~load_ref();
    var data = cs~load_ref();
    set_code(code);
    set_data(data);
}

() recv_external(slice in_msg) impure {
    ;; Do not accept external messages
    throw(72);
}